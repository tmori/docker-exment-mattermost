version: '3'
services:
  web:
    image: nginx:latest
    ports:
      - ${EXMENT_DOCKER_HTTP_PORTS-80}:80
    volumes:
      - ./volumes/nginx.conf:/etc/nginx/conf.d/default.conf
      - webserver-www-data:/var/www/exment
    env_file: .env
    depends_on:
      - exment_php
    networks:
      - webserver-network
    environment:
      - VIRTUAL_HOST=${EXMENT_DOCKER_FRONT_DOMAIN-localhost}

  exment_php:
    build: 
      context: ./exment
      args:
        - LARAVEL_VERSION=${EXMENT_DOCKER_LARAVEL_VERSION-5.6.*}
        - EXMENT_VERSION=${EXMENT_DOCKER_EXMENT_VERSION-*}

    volumes:
      - webserver-www-data:/var/www/exment
      - ./volumes/exment/php.ini:/usr/local/etc/php/php.ini
      - ./volumes/exment/logs:/var/www/exment/storage/logs
      - ./volumes/exment/.env:/var/www/exment/.env
    env_file: .env
    networks:
      - webserver-network

  mariadb:
    image: mariadb:10.4
    ports:
      - ${EXMENT_DOCKER_MYSQL_PORT-3306}:3306
    volumes:
      - exment-mariadb-data:/var/lib/mysql
    env_file: .env
    environment:
      MYSQL_DATABASE: ${EXMENT_DOCKER_MYSQL_DATABASE-exment_database}
      MYSQL_ROOT_PASSWORD: ${EXMENT_DOCKER_MYSQL_ROOT_PASSWORD-secret}
      MYSQL_USER: ${EXMENT_DOCKER_MYSQL_USER-exment_user}
      MYSQL_PASSWORD: ${EXMENT_DOCKER_MYSQL_PASSWORD-secret}  
    networks:
      - webserver-network 


  postgres:
    build: postgres
    read_only: true
    restart: unless-stopped
    volumes:
      - mattermost-postgres-data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
      - POSTGRES_DB=mattermost
    networks:
      - webserver-network 

  mattermost:
    build:
      context: ./mattermost
      # uncomment following lines for team edition or change UID/GID
      # args:
      #   - edition=team
      #   - PUID=1000
      #   - PGID=1000
      #   - MM_VERSION=5.31
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - 8000:8000
    volumes:
      - ./volumes/mattermost/config:/opt/mattermost/config:rw
      - ./volumes/mattermost/data:/opt/mattermost/data:rw
      - ./volumes/mattermost/logs:/opt/mattermost/logs:rw
      - /etc/localtime:/etc/localtime:ro
      # When you want to use SSO with GitLab, you have to add the cert pki chain of GitLab inside Alpine
      # to avoid Token request failed: certificate signed by unknown authority (link: https://github.com/mattermost/mattermost-server/issues/13059)
      # - <path_to_your_gitlab_pki>/pki_chain.pem:/etc/ssl/certs/pki_chain.pem:ro
    environment:
      # set same as db credentials and dbname
      - DB_HOST=postgres
      - MM_USERNAME=mmuser
      - MM_PASSWORD=mmuser_password
      - MM_DBNAME=mattermost

      # use the credentials you've set above, in the format:
      #- MM_SQLSETTINGS_DATASOURCE=postgres://${MM_USERNAME}:${MM_PASSWORD}@db:5432/${MM_DBNAME}?sslmode=disable&connect_timeout=10
      - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:mmuser_password@postgres:5432/mattermost?sslmode=disable&connect_timeout=10

      # in case your config is not in default location
      #- MM_CONFIG=/mattermost/config/config.json
    networks:
      - webserver-network 


volumes:
  webserver-www-data:
  exment-mariadb-data:
  mattermost-postgres-data:
  
networks:
  webserver-network:
